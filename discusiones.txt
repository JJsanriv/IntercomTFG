\begin{itemize}
    \item \textbf{Pruebas con incremento de jitter}
\end{itemize}

\textbf{Pruebas con límite de latencia a 0 ms}
\vspace{\baselineskip}

Comenzamos probando con una latencia ideal, de 0 ms.

- El comando usado para \textit{Minimal\_Video} ha sido el siguiente:
\vspace{\baselineskip}

\begin{lstlisting}[language=bash]
python minimal_video.py -a 192.168.0.58 --show_video --show_stats
\end{lstlisting}
Donde ``-a'' es la dirección IP del dispositivo con el que se va a comunicar el módulo, ``--show\_video'' es la opción para mostrar el vídeo en tiempo real y ``--show\_stats'' es la opción para mostrar las estadísticas de la red.
\vspace{\baselineskip}

\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
          |  AUDIO (msg)   |  VIDEO (msg)   |  AUDIO (kbps)  |  VIDEO (kbps)  |   CPU (%)
 Cycle    |  Sent   Recv   |  Sent   Recv   |   Sent  Recv   |   Sent  Recv   | Program System
============================================================================================
   1      |   0      0     |   0      0     |     0     0    |     0     0    |   0      0
   2      |  31     25     | 165    125     |  1169    943   |  2125   1612   |  36     63
   2      |   2      2     |   0      0     |   414    414   |     0      0   |  44     66
   3      |  33     33     |   0      0     |  1281   1281   |     0      0   |  35     74
   3      |   7      7     |   0      0     |  1460   1460   |     0      0   |  44     72
   4      |  37     37     |   0      0     |  1433   1433   |     0      0   |  34     74
   4      |   7      7     |   0      0     |  1435   1435   |     0      0   |  37     75
   5      |  32     19     | 473    389     |  1244    738   |  6282   5163   |  27     72
   5      |   9      0     |  42      0     |  1860      0   |  2954      0   |  25     72
   6      |  31     24     | 877    776     |  1202    930   | 11610  10274   |  27     74
   6      |   5      5     | 152    150     |  1027   1027   | 10665  10524   |  25     75
   7      |  35     35     | 738    701     |  1327   1327   |  9558   9076   |  27     75
   7      |   6      6     | 111    110     |  1281   1281   |  8090   8031   |  26     75
   8      |  31     31     | 990    972     |  1192   1192   | 13001  12767   |  24     72
   8      |   6      6     | 332    332     |  1032   1032   | 19498  19498   |  26     73
   9      |  27     27     | 801    765     |  1089   1089   | 11038  10541   |  23     79
   9      |   6      6     | 230    218     |   860    860   | 11267  10669   |   8     79
  10      |  33     30     | 424    273     |  1390   1263   |  6097   3925   |  34     71
  10      |  12      1     |  74     31     |  1312    109   |  2765   1158   |  26     67
  11      |  26     13     | 549    464     |  1200    600   |  8652   7314   |  26     70
  11      |  15      2     | 111     31     |  1657    221   |  4192   1170   |  40     72
  12      |  27     27     | 666    633     |  1248   1248   | 10515   9994   |  28     75
  12      |  15     15     | 384    370     |  1654   1654   | 14458  13938   |  40     76
  13      |  26     26     | 773    727     |  1207   1207   | 12254  11524   |  25     74
  13      |  11     11     |  97     96     |  1221   1221   |  3673   3635   |  40     75
  14      |  33     33     | 466    466     |  1527   1527   |  7361   7361   |  50     75
  14      |  13     13     | 337    337     |  1429   1429   | 12647  12647   |  33     76
  15      |  26     26     | 588    546     |  1208   1208   |  9334   8666   |  18     79
  15      |  11     11     | 323    301     |  1200   1200   | 12038  11217   |  23     77
  16      |  23     23     | 640    628     |  1070   1070   | 10168   9977   |  21     73
  16      |  11     11     | 273    239     |  1198   1198   | 10152   8885   |  29     74
  17      |  21     21     | 526    491     |   979    979   |  8377   7819   |  17     78
  17      |  10      9     |  47      0     |  1077    969   |  1731      0   |  16     79
============================================================================================
^CInterrupcion por teclado detectada.
Aplicacion de video detenida.

=== Estadisticas globales de ancho de banda ===
Audio enviado:	1155.34 kbps
Audio recibido:   1013.26 kbps
Video enviado:	7141.31 kbps
Video recibido:   6491.44 kbps
Tiempo total: 	17.5 s
=======================================================
Programa terminado.
QObject::killTimer: Timers cannot be stopped from another thread
QObject::~QObject: Timers cannot be stopped from another thread
\end{lstlisting}
\vspace{\baselineskip}

\newpage

Ahora, ejecutaremos el módulo \textit{Minimal\_Video\_FPS} con el mismo límite de latencia, 0 ms. El comando usado ha sido el siguiente:

\begin{lstlisting}[language=bash, basicstyle=\ttfamily\scriptsize]
    python minimal_video_fps.py -a 192.168.0.58 --show_video --show_stats -z 12
\end{lstlisting}
Donde ``a'' es la dirección IP destino, ``show\_video'' es para que se active la transmisión de vídeo, ``show\_stats'' es para que se muestre la información de estadísticas y ``z'' es el numero de fotogramas por segundo (FPS) que se desea enviar. En este caso, se ha configurado para mostrar el vídeo a 12 FPS.
\vspace{\baselineskip}


\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
          |  AUDIO (msg)   |  VIDEO (msg)   |  AUDIO (kbps)  |  VIDEO (kbps)  |   CPU (%)
 Cycle    |  Sent   Recv   |  Sent   Recv   |   Sent  Recv   |   Sent  Recv   | Program System
============================================================================================
   1      |   0      0     |   0      0     |     0     0    |     0     0    |   0      0
   2      |  34     32     | 165    136     |  1293   1217   |  2142   1767   |  30     65
   2      |   4      4     |   0      0     |   853    853   |     0      0   |  71     69
   3      |  35     35     |   0      0     |  1347   1347   |     0      0   |  59     76
   3      |   6      6     |   0      0     |  1313   1313   |     0      0   |  46     74
   4      |  29     29     |   0      0     |  1107   1107   |     0      0   |  36     74
   4      |   7      4     |   0      0     |  1606    918   |     0      0   |  35     75
   5      |  26     16     | 495    487     |   991    610   |  6447   6343   |  37     76
   5      |   4      4     |  29     29     |   893    893   |  2213   2213   |  13     74
   6      |  37     37     | 961    949     |  1385   1385   | 12282  12129   |  31     73
   6      |   5      5     | 171    170     |  1236   1236   | 14442  14358   |  37     76
   7      |  40     20     | 662    516     |  1465    732   |  8277   6449   |  36     74
   7      |   4      0     |  29      0     |  1215      0   |  3012      0   |  74     73
   8      |  28      2     | 405    165     |  1027     73   |  5077   2067   |  43     70
   8      |   5      0     |  47      0     |  1445      0   |  4642      0   |  61     69
   9      |  32      9     | 638    495     |  1180    332   |  8036   6235   |  29     68
   9      |   2      0     |  19      0     |   572      0   |  1858      0   |  34     68
  10      |  31     24     | 665    595     |  1136    879   |  8317   7445   |  23     72
  10      |   7      7     | 186    186     |  1834   1834   | 16645  16662   |  15     74
  11      |  31     31     | 817    757     |  1158   1158   | 10424   9658   |  21     73
  11      |   5      5     | 216    213     |  1281   1281   | 18903  18640   |  39     73
  12      |  37     37     | 774    761     |  1373   1373   |  9809   9644   |  28     71
  12      |   6      6     |  24     25     |  1647   1647   |  2252   2346   |  50     71
  13      |  35     35     | 996    980     |  1299   1299   | 12622  12424   |  27     76
  13      |   1      1     | 106     94     |   266    266   |  9637   8546   |  32     75
  14      |  28     28     | 809    801     |  1040   1040   | 10268  10168   |  29     73
  14      |   5      5     | 173    167     |  1290   1290   | 15245  14698   |  39     72
  15      |  32     27     | 453    311     |  1198   1011   |  5792   3979   |  30     66
  15      |   3      0     |  29      0     |   769      0   |  2542      0   |  23     66
  16      |  32     18     | 465    436     |  1190    669   |  5906   5538   |  28     57
  16      |   1      0     |   5      0     |   259      0   |   442      0   |   7     59
  17      |  32     26     | 472    446     |  1185    963   |  5968   5642   |  29     75
  17      |   3      2     |  57     57     |   821    547   |  5336   5318   |  41     75
  18      |  23     19     | 526    526     |   841    695   |  6569   6572   |  20     81
  18      |   0      0     |  67     66     |     0      0   |  6405   6291   |   8     82
  19      |  20     20     | 953    933     |   741    741   | 12058  11807   |  16     77
  19      |   5      5     |  88     88     |  1378   1378   |  8294   8294   |  42     75
  20      |  33     33     | 854    833     |  1224   1224   | 10815  10549   |  33     72
  20      |   6      6     | 179    158     |  1577   1577   | 16073  14185   |  48     73
  21      |  25     23     | 326    160     |   912    839   |  4061   1993   |  37     75
  21      |   3      0     |  36      0     |   951      0   |  3904      0   |  29     76
============================================================================================
^CInterrupcion por teclado detectada.
Aplicacion de video detenida.

=== Estadisticas globales de ancho de banda ===
Audio enviado:	1075.88 kbps
Audio recibido:   859.78 kbps
Video enviado:	6748.03 kbps
Video recibido:   6038.40 kbps
Tiempo total: 	21.4 s
=======================================================

=== Estadisticas de FPS ===
FPS objetivo: 	12.0
FPS real promedio: 3.9
Eficiencia FPS:	32.5%
==========================
Programa terminado.
QObject::killTimer: Timers cannot be stopped from another thread
QObject::~QObject: Timers cannot be stopped from another thread
\end{lstlisting}

\newpage

Finalmente, se ejecutará el módulo \textit{Minimal\_Video\_Resolution} con el mismo límite de latencia, 0 ms. El comando usado ha sido el siguiente:

\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
python minimal_video_resolution.py -a 192.168.0.58 --show_video --show_stats -z 12 \\
-w 350 -g 250
\end{lstlisting}
Donde ``a'' indica la dirección IP destino, ``show\_video'' indica que se active la transmisión de vídeo, ``show\_stats'' indica que se muestren las estadísticas de la transmisión, ``z'' indica el número de fotogramas por segundo (FPS), ``w'' indica el ancho del vídeo y ``g'' indica la altura del vídeo.
\vspace{\baselineskip}

\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
          |  AUDIO (msg)   |  VIDEO (msg)   |  AUDIO (kbps)  |  VIDEO (kbps)  |   CPU (%)
 Cycle    |  Sent   Recv   |  Sent   Recv   |   Sent  Recv   |   Sent  Recv   | Program System
============================================================================================
   1      |   0      0     |   0      0     |     0     0    |     0     0    |   0      0
   2      |  31     31     | 188    185     |  1178  1178    |  2438   2402   |  27     67
   2      |   7      7     |   0      0     |  1371  1371    |     0      0   |  53     69
   3      |  33     33     |   0      0     |  1263  1263    |     0      0   |  30     73
   3      |   8      8     |   0      0     |  1138  1138    |     0      0   |  43     75
   4      |  33     33     |  17     17     |  1317  1317    |   231    228   |  51     77
   4      |   7      7     | 128    127     |  1267  1267    |  7924   7862   |  27     76
   5      |  29     25     | 966    929     |  1140   983    | 12972  12474   |  31     74
   5      |   6      6     | 176    157     |  1144  1144    | 11459  10235   |  46     74
   6      |  33     33     | 732    729     |  1294  1294    |  9801   9761   |  27     79
   6      |   8      8     | 236    232     |  1384  1384    | 13936  13700   |  36     78
   7      |  33     33     | 446    446     |  1320  1320    |  6094   6094   |  21     74
   7      |   8      8     | 304    304     |  1187  1187    | 15394  15394   |  18     75
   8      |  33     33     | 752    752     |  1386  1386    | 10788  10788   |  41     76
   8      |   6      6     | 363    363     |   831   831    | 17190  17168   |  25     77
   9      |  24     24     | 909    888     |  1026  1026    | 13273  12969   |  32     79
   9      |   9      9     | 142    142     |  1244  1244    |  6698   6698   |  42     76
  10      |  24     24     | 866    827     |  1014  1014    | 12495  11935   |  41     75
  10      |  11     11     | 371    355     |  1570  1570    | 18086  17305   |  30     76
  11      |  24     24     | 744    698     |  1015  1015    | 10744  10082   |  29     73
  11      |   9      9     |  65      0     |  1292  1292    |  3190      0   |  43     72
  12      |  20     20     | 676    611     |   843   843    |  9727   8794   |  24     73
  12      |   6      6     | 187    187     |   878   878    |  9349   9349   |  22     74
  13      |  21     21     | 752    742     |   883   883    | 10802  10658   |  28     76
  13      |   6      6     | 478    457     |   852   852    | 23189  22158   |  26     76
  14      |  27     27     | 702    683     |  1118  1118    |  9923   9654   |  37     73
  14      |   8      8     | 210    193     |  1109  1109    |  9941   9135   |  29     73
  15      |  29     29     | 475    347     |  1234  1234    |  6904   5045   |  35     70
  15      |  10      2     |  37      0     |  1365   273    |  1715      0   |  37     70
============================================================================================
\end{lstlisting}


\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
Interrupcion por teclado detectada.
Aplicacion de video detenida.

=== Estadisticas globales de ancho de banda ===
Audio enviado:	1076.07 kbps
Audio recibido:   1039.14 kbps
Video enviado:	8048.59 kbps
Video recibido:   7602.30 kbps
Tiempo total: 	18.6 s
=======================================================

=== Estadisticas de FPS ===
FPS objetivo: 	12.0
FPS real promedio: 4.5
Eficiencia FPS:	37.6%
==========================
\end{lstlisting}

\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
=== Estadisticas de Resolucion ===
Resolucion objetivo: 350x250
Resolucion real: 352x288
Tiempo promedio de reescalado: 5.11 ms
Impacto en rendimiento:    	6.1%
=================================

=== Resoluciones compatibles de la camara ===
  1. 320x240
  2. 352x288 * SELECCIONADA
  3. 640x360
  4. 640x480
  5. 800x600
  6. 1024x768
  7. 1280x720
  8. 1920x1080

Dispositivo de camara: /dev/video0
==========================================
Programa terminado.
QObject::killTimer: Timers cannot be stopped from another thread
QObject::~QObject: Timers cannot be stopped from another thread
\end{lstlisting}
\vspace{\baselineskip}

\newpage

Ahora, se procederá a extraer las conclusiones correspondientes a las pruebas realizadas con un límite de latencia de 0 ms.
\vspace{\baselineskip}

\textbf{Análisis de \textit{Minimal\_Video} con 0ms de latencia:}
\vspace{\baselineskip}

Al observar el comportamiento de \textit{Minimal\_Video} bajo condiciones de latencia cero, se aprecia una transmisión estable y fluida. Las estadísticas globales muestran que el módulo envía audio a una tasa de 1155.34 kbps (recibiendo 1013.26 kbps) y vídeo a 7141.31 kbps (recibiendo 6491.44 kbps). Esto significa en un porcentaje de recepción aproximado del 88-91\%, indicando una transmisión eficiente con muy pocas pérdidas.
\vspace{\baselineskip}

La ausencia de latencia permite que los ciclos de envío y recepción estén bien sincronizados, como se observa en las estadísticas por ciclo, donde se mantiene un flujo constante de mensajes (entre 20-30 mensajes de audio y vídeo por ciclo). El uso de CPU oscila entre un 20-40\% para el módulo y 70-79\% para el sistema, lo que indica un procesamiento eficiente sin sobrecarga excesiva. La experiencia de usuario resultante es notablemente mejor que en escenarios con limitaciones de ancho de banda o latencia añadida.

\vspace{\baselineskip}

\textbf{Análisis de \textit{Minimal\_Video\_FPS} con 0ms de latencia:}
\vspace{\baselineskip}

Para este módulo, las estadísticas globales muestran una transmisión de audio de 1075.88 kbps (recibiendo 859.78 kbps) y de vídeo de 6748.03 kbps (recibiendo 6038.40 kbps). Estos valores representan un porcentaje de recepción del 80-89\%, ligeramente inferior al módulo base.
\vspace{\baselineskip}

Lo más relevante son las ``Estadísticas de FPS'', que muestran un promedio real de 3.9 FPS frente al objetivo de 12 FPS, resultando en una eficiencia del 32.5\%. Este dato es sorprendente, pues se espera un mejor rendimiento en condiciones ideales de latencia. Esto sugiere que existen otras limitaciones significativas más allá de la red, probablemente relacionadas con el procesamiento del vídeo o la implementación del control de FPS. Aunque el rendimiento está lejos del objetivo, sigue siendo mejor que en escenarios con restricciones de red más severas.

\vspace{\baselineskip}

\textbf{Análisis de \textit{Minimal\_Video\_Resolution} con 0ms de latencia:}
\vspace{\baselineskip}

Este módulo, combinando control de FPS y resolución reescalada a 352x288, muestra un comportamiento ligeramente superior al anterior bajo condiciones de latencia cero. Los datos globales indican una transmisión de audio de 1076.07 kbps (recibiendo 1039.14 kbps) y de vídeo de 8048.59 kbps (recibiendo 7602.30 kbps), con un porcentaje de recepción del 94-96\%, el más alto de los tres módulos.
\vspace{\baselineskip}

Las ``Estadísticas de FPS'' revelan un promedio de 4.5 FPS reales frente al objetivo de 12 FPS, alcanzando una eficiencia del 37.6\%. Si bien sigue estando por debajo del objetivo, supera ligeramente al módulo anterior. El ``Tiempo de reescalado promedio'' es de 5.11 ms, con un impacto en rendimiento del 6.1\%, valores razonables que limitantan el rendimiento.
\vspace{\baselineskip}

\textbf{Conclusiones para latencia 0ms:}

Las pruebas con latencia cero muestran interesantes resultados en los tres módulos:

\begin{itemize}
    \item \textbf{Transmisión:} Los tres módulos logran tasas de transmisión y recepción relativamente altas, con porcentajes de recepción entre el 80-96\%, siendo \textit{Minimal\_Video\_Resolution} el más eficiente en este aspecto.
    
    \item \textbf{Limitaciones:} Sorprendentemente, incluso en condiciones ideales de latencia, los módulos con control de FPS no logran acercarse a su objetivo de 12 FPS, alcanzando solo entre 3.9-4.5 FPS. Esto sugiere que las limitaciones se encuentran otros componentes del sistema (cámara, procesamiento, implementación del control de FPS).
    
    \item \textbf{Comparación en Rendimiento:} El módulo \textit{Minimal\_Video\_Resolution} muestra un rendimiento ligeramente superior en términos de FPS y porcentaje de recepción de datos, a pesar de transmitir un mayor volumen de información debido al reescalado de la resolución.

  \end{itemize}

Estas pruebas demuestran que, incluso en condiciones ideales de red, existen importantes limitaciones en el rendimiento que probablemente estén relacionadas con otras partes del sistema. Esto sugiere que futuras mejoras deberían enfocarse no solo en la optimización de la transmisión de red, sino también en la optimización del procesamiento del vídeo, la captura de la cámara y la implementación del control de los FPS.

\newpage

\textbf{Resultados con límite de latencia (Delay) a 100 ms:}
\vspace{\baselineskip}

Ahora, se procederá a realizar las pruebas con un límite de latencia de 100 ms. 
\vspace{\baselineskip}

El comando usado para \textit{Minimal\_Video} ha sido el siguiente:
\begin{lstlisting}[language=bash]
python minimal_video.py -a 192.168.0.58 --show_video --show_stats
\end{lstlisting}
Donde ``-a'' es la dirección IP del dispositivo con el que se va a comunicar el módulo, ``--show\_video'' es la opción para mostrar el vídeo en tiempo real y ``--show\_stats'' es la opción para mostrar las estadísticas de la red.
\vspace{\baselineskip}

\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
          |  AUDIO (msg)   |  VIDEO (msg)   |  AUDIO (kbps)  |  VIDEO (kbps)  |   CPU (%)
 Cycle    |  Sent   Recv   |  Sent   Recv   |   Sent  Recv   |   Sent  Recv   | Program System
============================================================================================
   1      |   0      0     |   0      0     |     0     0    |     0     0    |   0      0
   2      |  29      0     | 127      0     |  1112     0    |  1665     0    |  28     60
   2      |   3      0     |  31      0     |   660     0    |  2332     0    |  53     61
   3      |  33      0     |   5      0     |  1252     0    |    62     0    |  33     75
   3      |   8      0     |   0      0     |  1872     0    |     0     0    |  50     76
   4      |  31      0     |  48      0     |  1179     0    |   624     0    |  31     72
   4      |   6      0     |  34      0     |  1381     0    |  2674     0    |  28     71
   5      |  31      0     | 243      0     |  1179     0    |  3157     0    |  47     65
   5      |   5      0     |  28      0     |  1170     0    |  2225     0    |  42     66
   6      |  32      0     | 243      0     |  1215     0    |  3152     0    |  41     70
   6      |   3      0     |  51      0     |   385     0    |  2237     0    |  39     70
   7      |  32      7     | 154      0     |  1387   303    |  2279     0    |  26     73
   7      |   8      8     |  43      0     |  1058  1058    |  1936     0    |  12     72
   8      |  25     25     | 282    165     |  1023  1023    |  3943  2306    |  32     69
   8      |   8      8     |  50      0     |  1076  1076    |  2291     0    |  41     69
   9      |  29     29     | 247      0     |  1232  1232    |  3585     0    |  55     71
   9      |  11     11     |  60      0     |  1432  1432    |  2661     0    |  35     71
  10      |  33     23     | 257      0     |  1441  1004    |  3833     0    |  41     72
  10      |  11      0     |  76      0     |  1419     0    |  3342     0    |  47     72
  11      |  30     24     | 702   541      |  1314  1051    | 10505  8096    |  45     72
  11      |  13      3     |  95      0     |  1569   362    |  3921     0    |  44     70
  12      |  31     28     |1007   905      |  1388  1254    | 15395 13840    |  45     70
  12      |  13     13     | 495   461      |  1564  1564    | 20336 18938    |  44     70
  13      |  31     11     | 596   397      |  1387   492    |  9109  6067    |  46     67
  13      |  11      0     |  84      0     |  1303     0    |  3393     0    |  54     66
  14      |  25      7     | 513   376      |  1116   312    |  7819  5728    |  29     63
  14      |  13      0     |  93      0     |  1567     0    |  3832     0    |  51     65
  15      |  32     20     | 930   809      |  1424   890    | 14131 12293    |  39     67
  15      |   9      0     |  82      0     |  1101     0    |  3429     0    |  44     66
  16      |  28     19     |1064   994      |  1240   841    | 16094 15037    |  35     70
  16      |  13     13     | 532   495      |  1630  1630    | 22786 21199    |  45     71
  17      |  31     31     |1638  1562      |  1362  1362    | 24570 23429    |  42     71
  17      |  10     10     | 546   534      |  1275  1275    | 23770 23255    |  23     71
  18      |  33     33     |1640  1587      |  1434  1434    | 24341 23550    |  41     73
  18      |  10     10     | 609   599      |  1264  1264    | 26292 25868    |  34     73
  19      |  34     30     |1173  1073      |  1483  1308    | 17472 15978    |  30     72
  19      |   8      8     | 508   495      |  1031  1031    | 22355 21783    |  27     72
  20      |  28     10     | 409   212      |  1226   438    |  6114  3171    |  46     68
  20      |  10      0     |  92      0     |  1193     0    |  3753     0    |  54     68
  21      |  22     20     |1164  1076      |   985   895    | 17796 16452    |  35     70
  21      |  11     11     | 587   559      |  1330  1330    | 24239 23074    |  29     69
  22      |  24     24     |1191  1150      |  1009  1009    | 17099 16512    |  25     72
============================================================================================
Interrupcion por teclado detectada.
Aplicacion de video detenida.

=== Estadisticas globales de ancho de banda ===
Audio enviado:	1179.23 kbps
Audio recibido:   636.32 kbps
Video enviado:	8833.52 kbps
Video recibido:   6970.41 kbps
Tiempo total: 	22.5 s
=======================================================
Programa terminado.
QObject::killTimer: Timers cannot be stopped from another thread
QObject::~QObject: Timers cannot be stopped from another thread
\end{lstlisting}
\vspace{\baselineskip}

\newpage

Ahora, ejecutaremos el módulo \textit{Minimal\_Video\_FPS} con un límite de latencia de 100 ms. El comando usado ha sido el siguiente:

\begin{lstlisting}[language=bash, basicstyle=\ttfamily\scriptsize]
    python minimal_video_fps.py -a 192.168.0.58 --show_video --show_stats -z 12
\end{lstlisting}
Donde ``a'' es la dirección IP destino, ``show\_video'' es para que se active la transmisión de vídeo, ``show\_stats'' es para que se muestre la información de estadísticas y ``z'' es el numero de fotogramas por segundo (FPS) que se desea enviar. En este caso, se ha configurado para mostrar el vídeo a 12 FPS.
\vspace{\baselineskip}

\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
          |  AUDIO (msg)   |  VIDEO (msg)   |  AUDIO (kbps)  |  VIDEO (kbps)  |   CPU (%)
 Cycle    |  Sent   Recv   |  Sent   Recv   |   Sent  Recv   |   Sent  Recv   | Program System
============================================================================================
   1      |   0      0     |   0      0     |     0     0    |     0     0    |   0      0
   2      |  34      9     | 149      0     |  1112   294    |  1665     0    |  18     62
   2      |  34      9     | 150      0     |  1110   293    |  1674     0    |  18     63
   3      |  39     31     |  15      0     |  1274  1013    |   165     0    |  41     71
   3      |   0      0     |   0      0     |     0     0    |     0     0    |  34     72
   4      |  39     39     |   0      0     |  1433  1433    |     0     0    |  47     76
   4      |   7      7     |   0      0     |  1404  1404    |     0     0    |  30     75
   5      |  31     24     | 723    614     |  1213   939    |  9660  8202    |  32     74
   5      |   8      2     | 228    165     |  1584   396    | 15425 11159    |  36     71
   6      |  31      0     | 203      0     |  1213     0    |  2711     0    |  38     65
   6      |   7      0     | 165    118     |  1392     0    | 11202  8020    |  48     68
   7      |  30      0     | 261     47     |  1171     0    |  3480   624    |  34     68
   7      |   7      0     |  50      0     |   938     0    |  2290     0    |  40     69
   8      |  29      9     | 399    227     |  1246   386    |  5852  3331    |  43     69
   8      |   9      0     | 183    141     |  1119     0    |  7772  5986    |  26     67
   9      |  30     25     | 922    852     |  1325  1104    | 13910 12858    |  55     74
   9      |   7      7     | 358    346     |   874   874    | 15263 14742    |  34     72
  10      |  30     20     | 653    495     |  1325   883    |  9853  7469    |  35     69
  10      |  11      0     | 189    116     |  1258     0    |  7382  4535    |  24     69
  11      |  23     15     | 753    661     |  1051   685    | 11751 10314    |  22     67
  11      |   9      9     | 357    346     |  1029  1029    | 13935 13512    |  24     71
  12      |  28     22     | 580    469     |  1274  1001    |  9012  7286    |  27     68
  12      |  14      6     | 348    293     |  1597   684    | 13560 11422    |  45     67
  13      |  28     28     |1066   1021     |  1234  1234    | 16049 15371    |  24     72
  13      |   7      7     | 468    450     |   890   890    | 20323 19540    |  27     70
  14      |  29      9     | 256     40     |  1203   373    |  3625   567    |  35     65
  14      |   4      1     | 273    258     |   615   153    | 14344 13555    |  18     64
  15      |  30     30     |1150   1107     |  1199  1199    | 15705 15117    |  25     69
  15      |   9      9     | 168    151     |  1385  1385    |  8822  7937    |  23     71
  16      |  29     29     | 990    911     |  1186  1186    | 13827 12725    |  36     72
  16      |   9      9     | 330    311     |  1470  1470    | 18408 17347    |  24     71
  17      |  24     24     |1069   1006     |   959   959    | 14593 13732    |  28     69
  17      |   6      6     | 415    414     |  1025  1025    | 24220 24162    |  31     72
  18      |  29     18     | 444    265     |  1149   713    |  6007  3584    |  31     72
  18      |   7      0     |  45      0     |  1242     0    |  2729     0    |  32     71
============================================================================================
Interrupcion por teclado detectada.
Aplicacion de video detenida.

=== Estadisticas globales de ancho de banda ===
Audio enviado:	1168.50 kbps
Audio recibido:   706.70 kbps
Video enviado:	7978.58 kbps
Video recibido:   6464.17 kbps
Tiempo total: 	18.7 s
=======================================================

=== Estadisticas de FPS ===
FPS objetivo: 	12.0
FPS real promedio: 6.3
Eficiencia FPS:	52.6%
==========================
Programa terminado.
QObject::killTimer: Timers cannot be stopped from another thread
QObject::~QObject: Timers cannot be stopped from another thread
\end{lstlisting}
\vspace{\baselineskip}

\newpage

Finalmente, se ejecutará el módulo \textit{Minimal\_Video\_Resolution} con un límite de latencia de 100 ms. El comando usado ha sido el siguiente:

\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
python minimal_video_resolution.py -a 192.168.0.58 --show_video --show_stats -z 12 \\
-w 350 -g 250
\end{lstlisting}
Donde ``a'' indica la dirección IP destino, ``show\_video'' indica que se active la transmisión de vídeo, ``show\_stats'' indica que se muestren las estadísticas de la transmisión, ``z'' indica el número de fotogramas por segundo (FPS), ``w'' indica el ancho del vídeo y ``g'' indica la altura del vídeo.
\vspace{\baselineskip}

\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
          |  AUDIO (msg)   |  VIDEO (msg)   |  AUDIO (kbps)  |  VIDEO (kbps)  |   CPU (%)
 Cycle    |  Sent   Recv   |  Sent   Recv   |   Sent  Recv   |   Sent  Recv   | Program System
============================================================================================
   1      |   0      0     |   0      0     |     0     0    |     0     0    |   0      0
   2      |  33     31     | 188    122     |  1364  1281    |  2653   1723   |  44     63
   2      |   9      9     |   0      0     |  1412  1412    |     0      0   |  52     68
   3      |  33     33     |   0      0     |  1361  1361    |     0      0   |  36     74
   3      |   7      7     |   0      0     |  1092  1092    |     0      0   |  38     73
   4      |  28     28     | 334    254     |  1131  1131    |  4609   3501   |  34     71
   4      |   7      7     | 230    223     |  1191  1191    | 13355  12961   |  20     71
   5      |  24     24     |1122   1063     |   926   926    | 14783  14005   |  31     73
   5      |   4      4     | 194    187     |   845   845    | 13990  13501   |  32     73
   6      |  33     33     |1420   1386     |  1191  1191    | 17511  17091   |  26     74
   6      |   4      4     | 272    273     |  1272  1272    | 29530  29664   |  19     73
   7      |  28     28     |1258   1199     |   982   982    | 15072  14365   |  33     71
   7      |   3      3     | 189    186     |  1421  1421    | 30566  30080   |  57     71
   8      |  35     35     |1391   1332     |  1228  1228    | 16672  15961   |  39     70
   8      |   2      2     |  64     61     |   922   922    | 10091   9582   |  42     70
   9      |  31     31     |1705   1622     |  1080  1080    | 20282  19296   |  42     71
   9      |   4      4     | 192    191     |  1602  1602    | 26264  26127   |  36     73
  10      |  31     31     |1536   1513     |  1087  1087    | 18389  18113   |  39     73
  10      |   2      2     |  93     89     |   974   974    | 15491  14786   |  44     73
  11      |  35     33     | 698    552     |  1225  1155    |  8341   6597   |  36     72
  11      |   4      0     |  25      0     |  1922     0    |  4107      0   |  44     69
  12      |  29     24     | 846    710     |  1017   842    | 10138   8509   |  28     69
  12      |   4      4     |  53     35     |  1631  1631    |  7358   4880   |  49     71
  13      |  29     29     |1262   1195     |  1029  1029    | 15297  14482   |  21     73
  13      |   2      2     |  13      0     |   814   814    |  1808      0   |  24     73
  14      |  37     28     | 391    168     |  1307   989    |  4716   2028   |  28     68
  14      |   4      0     |   1      0     |  1160     0    |    76      0   |  17     68
  15      |  29     22     |1111    960     |  1069   811    | 13984  12078   |  31     67
  15      |   1      1     |  53     42     |   283   283    |  5104   4062   |  25     69
  16      |  34     34     |1181   1086     |  1256  1256    | 14903  13703   |  34     72
  16      |   4      1     |  36      0     |  1110   277    |  3417      0   |  50     72
  17      |  38      0     | 250      0     |  1407     0    |  3158      0   |  36     70
  17      |   6      0     |  18      0     |  1687     0    |  1730      0   |  25     68
============================================================================================
 ^CInterrupcion por teclado detectada.
Aplicacion de video detenida.

=== Estadisticas globales de ancho de banda ===
Audio enviado:	1065.15 kbps
Audio recibido:   916.69 kbps
Video enviado:	10215.56 kbps
Video recibido:   9153.09 kbps
Tiempo total: 	17.7 s
=======================================================

=== Estadisticas de FPS ===
FPS objetivo: 	12.0
FPS real promedio: 4.2
Eficiencia FPS:	35.0%
==========================
\end{lstlisting}

\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
=== Estadisticas de Resolucion ===
Resolucion objetivo: 350x250
Resolucion real: 352x288
Tiempo promedio de reescalado: 5.37 ms
Impacto en rendimiento:    	6.4%
=================================

=== Resoluciones compatibles de la camara ===
  1. 320x240
  2. 352x288 * SELECCIONADA
  3. 640x360
  4. 640x480
  5. 800x600
  6. 1024x768
  7. 1280x720
  8. 1920x1080

Dispositivo de camara: /dev/video0
==========================================
Programa terminado.
QObject::killTimer: Timers cannot be stopped from another thread
QObject::~QObject: Timers cannot be stopped from another thread
\end{lstlisting}

\newpage

Ahora, se procederá a extraer las conclusiones correspondientes a las pruebas realizadas con un límite de latencia de 100 ms.
\vspace{\baselineskip}

\textbf{Análisis de \textit{Minimal\_Video} con 100ms de latencia:}
\vspace{\baselineskip}

Al observar el comportamiento de \textit{Minimal\_Video} bajo una latencia de 100ms, se evidencia un impacto considerable en el rendimiento. Las estadísticas globales muestran que el módulo envía audio a 1179.23 kbps pero recibe solo 636.32 kbps (54\%), mientras que para vídeo envía 8833.52 kbps y recibe 6970.41 kbps (79\%). Esta diferencia entre envío y recepción, especialmente en el audio, indica que la latencia introduce un retraso significativo que afecta la sincronización de la comunicación.
\vspace{\baselineskip}

Un análisis detallado de los ciclos revela un patrón característico: durante los primeros 6-7 ciclos, prácticamente no se recibe ningún paquete, y luego comienza la recepción con valores fluctuantes. Este es el efecto directo del retraso de 100ms, que causa que los primeros paquetes enviados tarden varios ciclos en llegar al receptor. La consecuencia para el usuario es una experiencia menos fluida y desincronización notable entre audio y vídeo.

\vspace{\baselineskip}

\textbf{Análisis de \textit{Minimal\_Video\_FPS} con 100ms de latencia:}
\vspace{\baselineskip}

Para este módulo, que intenta mantener una tasa constante de 12 FPS, la latencia de 100ms tiene un impacto significativo. Las estadísticas globales muestran un envío de audio de 1168.50 kbps (recibiendo 706.70 kbps, 60\%) y de vídeo de 7978.58 kbps (recibiendo 6464.17 kbps, 81\%). Estos porcentajes de recepción, aunque no óptimos, son suficientes para mantener una comunicación aceptable.
\vspace{\baselineskip}

La sección de ``Estadísticas de FPS'' indica que el módulo consigue un promedio de 6.3 FPS reales frente al objetivo de 12 FPS, alcanzando una eficiencia del 52.6\%. Este valor, notablemente mejor que en escenarios con anchos de banda limitados, muestra que el control de FPS consigue adaptarse parcialmente a la latencia actual. El sistema parece ajustar el intervalo entre fotogramas para compensar el retraso, permitiendo una transmisión más sincronizada aunque a costa de una menor fluidez visual. Al igual que en el módulo anterior, se observa un retraso inicial en la recepción de paquetes, seguida por un patrón irregular donde ciclos consecutivos muestran algunas variaciones en la cantidad de datos recibidos.

\vspace{\baselineskip}

\textbf{Análisis de \textit{Minimal\_Video\_Resolution} con 100ms de latencia:}
\vspace{\baselineskip}

Este módulo, combinando control de FPS y resolución reescalada a 352x288, muestra un comportamiento interesante bajo condiciones de latencia de 100ms. Los datos globales indican una transmisión de audio de 1065.15 kbps (recibiendo 916.69 kbps, 86\%) y de vídeo de 10215.56 kbps (recibiendo 9153.09 kbps, 90\%), que son los mejores porcentajes de recepción entre los tres módulos.
\vspace{\baselineskip}

Sin embargo, las ``Estadísticas de FPS'' revelan un promedio de solo 4.2 FPS reales frente al objetivo de 12 FPS, con una eficiencia del 35.0\%. Esta contradicción (mejor tasa de recepción pero peor eficiencia de FPS) sugiere que el módulo prioriza la integridad de los datos enviados sobre la frecuencia de envío. Es decir, envía menos fotogramas pero se asegura de que lleguen completos. El ``Tiempo de reescalado promedio'' es de 5.37 ms, con un impacto en rendimiento del 6.4\%, valores similares a los observados en condiciones sin latencia, lo que indica que esta funcionalidad no se ve afectada por el retraso de la red.
\vspace{\baselineskip}

\textbf{Conclusiones para latencia de 100ms:}

La introducción de una latencia de 100ms muestra aspectos interesantes sobre el comportamiento de los tres módulos:

\begin{itemize}
    \item \textbf{Efecto del retardo inicial:} Los tres módulos comienzan de la misma forma, donde los primeros ciclos muestran poca o ninguna recepción, seguidos por un patrón irregular de transmisión que refleja directamente el impacto de la latencia.
    
    \item \textbf{Diferencia entre envío y recepción:} La latencia genera una diferencia significativa entre los datos enviados y recibidos, especialmente notable en el audio para \textit{Minimal\_Video} (54\%) y \textit{Minimal\_Video\_FPS} (60\%).
    
    \item \textbf{Adaptación:} El módulo \textit{Minimal\_Video\_FPS} muestra la mejor eficiencia de FPS (52.6\%), indicando que logra adaptarse bien a la latencia introducida.
    
    \item \textbf{Prioridades diferentes:} El módulo \textit{Minimal\_Video\_Resolution} presenta los mejores porcentajes de recepción (86-90\%) pero la menor eficiencia de FPS (35.0\%), lo que indica que prioriza la integridad de los datos sobre la frecuencia de fotogramas.
    
    \item \textbf{Impacto asimétrico:} La latencia afecta de manera distinta al audio y al vídeo, con ciclos donde el audio se transmite correctamente mientras el vídeo sufre pérdidas significativas, o viceversa.
\end{itemize}

Estas conclusiones muestran que aunque una latencia de 100ms permite mantener una comunicación funcional, supone sin embargo, limitaciones notables en el rendimiento y lastra la fluidez visual, la calidad de audio y la sincronización entre ambos.


\newpage

\textbf{Pruebas con límite de latencia a 250 ms}
\vspace{\baselineskip}

Ahora, se procederá a realizar las pruebas con un límite de latencia de 250 ms.
\vspace{\baselineskip}

El comando usado para \textit{Minimal\_Video} ha sido el siguiente:

\begin{lstlisting}[language=bash]
python minimal_video.py -a 192.168.0.58 --show_video --show_stats
\end{lstlisting}
Donde ``-a'' es la dirección IP del dispositivo con el que se va a comunicar el módulo, ``--show\_video'' es la opción para mostrar el vídeo en tiempo real y ``--show\_stats'' es la opción para mostrar las estadísticas de la red.
\vspace{\baselineskip}

\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
          |  AUDIO (msg)   |  VIDEO (msg)   |  AUDIO (kbps)  |  VIDEO (kbps)  |   CPU (%)
 Cycle    |  Sent   Recv   |  Sent   Recv   |   Sent  Recv   |   Sent  Recv   | Program System
============================================================================================
   1      |   0      0     |   0      0     |     0     0    |     0     0    |   0      0
   2      |  23     21     | 165     74     |   877    800   |  2148    964   |  47     51
   2      |   4      4     |   0      0     |   876    876   |     0      0   |  20     51
   3      |  33     33     |   0      0     |  1259   1259   |     0      0   |  39     81
   3      |   7      7     |   7      7     |  1386   1386   |   473    473   |  42     82
   4      |  30     30     | 567    451     |  1174   1174   |  7580   6028   |  25     74
   4      |   7      7     | 233    194     |  1378   1378   | 15669  13044   |  36     71
   5      |  26     26     | 837    750     |  1016   1016   | 11176  10015   |  33     67
   5      |   4      4     | 170    144     |   790    790   | 11463   9719   |  42     66
   6      |  29     29     |1070    948     |  1123   1123   | 14154  12538   |  37     67
   6      |   6      6     | 250    250     |  1247   1247   | 17734  17748   |  19     70
   7      |  29     29     |1222   1122     |  1117   1117   | 16082  14765   |  32     70
   7      |   2      1     | 147    140     |   344    172   |  8643   8242   |   5     71
   8      |  26     27     |1106    982     |  1042   1082   | 15135  13436   |  41     70
   8      |   5      5     | 330    313     |   884    884   | 19933  18905   |  32     69
   9      |  29     29     |1303   1190     |  1164   1164   | 17858  16311   |  36     72
   9      |   6      6     | 204    198     |  1060   1060   | 12300  11937   |  53     71
  10      |  24     24     |1133   1050     |   955    955   | 15401  14274   |  32     69
  10      |   5      5     | 384    377     |   913    913   | 23944  23508   |  33     70
  11      |  33     33     | 293     85     |  1310   1310   |  3971   1150   |  33     67
  11      |   8      0     |  56      0     |  1482      0   |  3546      0   |  50     65
  12      |  35     14     | 601    435     |  1385    554   |  8122   5881   |  33     62
  12      |   7      0     |  52      0     |  1266      0   |  3215      0   |  33     62
  13      |  26     18     | 758    635     |  1037    718   | 10324   8649   |  38     65
  13      |   9      2     |  41      0     |  1611    358   |  2508      0   |  21     67
  14      |  29     21     | 815    705     |  1146    830   | 11003   9516   |  36     66
  14      |  10      1     |  43      0     |  1764    176   |  2593      0   |  16     67
  15      |  25      5     | 381    153     |  1004    200   |  5228   2099   |  34     69
  15      |   6      0     | 207    165     |  1040      0   | 12240   9763   |  47     68
  16      |  29      4     | 265     28     |  1169    161   |  3651    386   |  38     69
  16      |   8      2     | 134     92     |  1245    311   |  7122   4886   |  33     70
  17      |  28     25     | 890    789     |  1141   1019   | 12390  10988   |  33     70
  17      |   6      6     | 147    134     |   924    924   |  7735   7050   |  18     71
  18      |  21     21     |1243   1185     |   869    869   | 17578  16756   |  30     70
  18      |  13     13     | 195    164     |  1929   1929   |  9884   8311   |  13     71
  19      |  29     29     | 829    698     |  1213   1213   | 11844   9970   |  35     72
============================================================================================
Interrupcion por teclado detectada.
Aplicacion de video detenida.

=== Estadisticas globales de ancho de banda ===
Audio enviado:	1044.97 kbps
Audio recibido:   824.80 kbps
Video enviado:	9296.39 kbps
Video recibido:   7781.52 kbps
Tiempo total: 	19.3 s
=======================================================
Programa terminado.
QObject::killTimer: Timers cannot be stopped from another thread
QObject::~QObject: Timers cannot be stopped from another thread
\end{lstlisting}
\vspace{\baselineskip}

\newpage

Ahora, se ejecutará el módulo \textit{Minimal\_Video\_FPS} con un límite de latencia de 250 ms. El comando usado ha sido el siguiente:

\begin{lstlisting}[language=bash, basicstyle=\ttfamily\scriptsize]
    python minimal_video_fps.py -a 192.168.0.58 --show_video --show_stats -z 12
\end{lstlisting}
Donde ``a'' es la dirección IP destino, ``show\_video'' es para que se active la transmisión de vídeo, ``show\_stats'' es para que se muestre la información de estadísticas y ``z'' es el numero de fotogramas por segundo (FPS) que se desea enviar. En este caso, se ha configurado para mostrar el vídeo a 12 FPS.
\vspace{\baselineskip}

\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
          |  AUDIO (msg)   |  VIDEO (msg)   |  AUDIO (kbps)  |  VIDEO (kbps)  |   CPU (%)
 Cycle    |  Sent   Recv   |  Sent   Recv   |   Sent  Recv   |   Sent  Recv   | Program System
============================================================================================
   1      |   0      0     |   0      0     |     0     0    |     0     0    |   0      0
   2      |  31     25     | 165     87     |  1221    984   |  2218   1171   |  33     69
   2      |   7      7     |   0      0     |  1346   1346   |     0      0   |  41     70
   3      |  35     35     |   0      0     |  1377   1377   |     0      0   |  43     75
   3      |   6      6     |  30     29     |  1149   1149   |  1965   1899   |  35     76
   4      |  25     21     | 698    619     |   965    810   |  9200   8158   |  31     71
   4      |   6      6     |  60     51     |  1248   1248   |  4267   3627   |  19     70
   5      |  35     28     | 643    485     |  1342   1073   |  8419   6350   |  29     69
   5      |   5      0     |  51     11     |  1104      0   |  3851    830   |  20     68
   6      |  26     20     | 775    653     |   991    762   | 10084   8497   |  27     68
   6      |   4      0     |   4      0     |   903      0   |   308      0   |  13     69
   7      |  35     30     | 947    791     |  1309   1122   | 12099  10106   |  37     70
   7      |   5      5     |  99     98     |  1087   1087   |  7344   7270   |  13     70
   8      |  28     28     |1308   1229     |  1076   1076   | 17160  16125   |  28     72
   8      |   5      5     | 327    306     |   911    911   | 20357  19037   |  38     72
   9      |  29     29     | 738    637     |  1157   1157   | 10050   8676   |  31     71
   9      |  10      3     | 254    221     |  1667    500   | 14451  12570   |  30     71
  10      |  25      3     | 244     28     |  1007    120   |  3358    385   |  36     67
  10      |   9      4     | 204    165     |  1528    679   | 11828   9565   |  31     65
  11      |  23     16     | 872    755     |   904    629   | 11711  10143   |  34     73
  11      |   9      9     | 175    168     |  1714   1714   | 11379  10923   |  11     77
  12      |  27     27     |1310   1204     |  1042   1042   | 17271  15874   |  31     73
  12      |   6      6     | 330    315     |  1221   1221   | 22936  21892   |  31     70
  13      |  31     31     |1485   1440     |  1202   1202   | 19657  19064   |  28     67
  13      |   4      4     | 165    165     |   808    808   | 11382  11382   |  24     69
  14      |  33     33     |1485   1442     |  1279   1279   | 19654  19087   |  30     70
  14      |   4      4     | 316    315     |   787    787   | 21249  21169   |  36     68
  15      |  37     37     |1320   1273     |  1450   1450   | 17664  17031   |  32     71
  15      |   8      7     | 330    314     |  1533   1342   | 21600  20552   |  40     71
  16      |  34     27     | 429    252     |  1342   1066   |  5785   3396   |  37     70
  16      |   4      2     | 214    188     |   746    373   | 13634  11976   |  34     72
  17      |  39      8     | 479    301     |  1548    317   |  6494   4081   |  41     71
  17      |   5      4     | 295    279     |   901    721   | 18151  17177   |  33     70
  18      |  31     28     | 860    777     |  1235   1115   | 11696  10571   |  35     78
  18      |  10     10     | 234    213     |  1592   1592   | 12728  11585   |  29     77
  19      |  27     27     |1091   1020     |  1111   1111   | 15326  14330   |  35     74
  19      |   8      8     | 398    366     |  1211   1211   | 20578  18912   |  32     71
  20      |  25     25     |1081   1009     |  1042   1042   | 15393  14369   |  28     69
  20      |   8      8     | 276    271     |  1181   1181   | 13927  13664   |  36     73
  21      |  31     31     |1165   1112     |  1299   1299   | 16674  15917   |  26     70
  21      |   9      9     | 284    267     |  1322   1322   | 14243  13399   |  35     69
  22      |  31     31     | 634    481     |  1276   1276   |  8913   6759   |  33     70
  22      |   3      0     |  18      0     |   473      0   |   971      0   |  19     68
============================================================================================
 Interrupcion por teclado detectada.
Aplicacion de video detenida.

=== Estadisticas globales de ancho de banda ===
Audio enviado:	1127.14 kbps
Audio recibido:   943.42 kbps
Video enviado:	10848.86 kbps
Video recibido:   9626.26 kbps
Tiempo total: 	22.5 s
=======================================================

=== Estadisticas de FPS ===
FPS objetivo: 	12.0
FPS real promedio: 7.2
Eficiencia FPS:	60.1%
==========================
Programa terminado.
QObject::killTimer: Timers cannot be stopped from another thread
QObject::~QObject: Timers cannot be stopped from another thread
\end{lstlisting}

\newpage

Ahora, se procederá a ejecutar el módulo \textit{Minimal\_Video\_Resolution} con un límite de latencia de 250 ms. El comando usado ha sido el siguiente:

\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
python minimal_video_resolution.py -a 192.168.0.58 --show_video --show_stats -z 12 \\
-w 350 -g 250
\end{lstlisting}
Donde ``a'' indica la dirección IP destino, ``show\_video'' indica que se active la transmisión de vídeo, ``show\_stats'' indica que se muestren las estadísticas de la transmisión, ``z'' indica el número de fotogramas por segundo (FPS), ``w'' indica el ancho del vídeo y ``g'' indica la altura del vídeo.
\vspace{\baselineskip}

\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
          |  AUDIO (msg)   |  VIDEO (msg)   |  AUDIO (kbps)  |  VIDEO (kbps)  |   CPU (%)
 Cycle    |  Sent   Recv   |  Sent   Recv   |   Sent  Recv   |   Sent  Recv   | Program System
============================================================================================
   1      |   0      0     |   0      0     |     0     0    |     0     0    |   0      0
   2      |  33     22     | 188     45     |  1328   885    |  2584    619   |  20     65
   2      |   3      3     |   0      0     |   453   453    |     0      0   |  13     68
   3      |  28     28     |   0      0     |  1152  1152    |     0      0   |  46     77
   3      |   7      7     |   0      0     |  1048  1048    |     0      0   |  31     76
   4      |  33     33     |   0      0     |  1379  1379    |     0      0   |  53     77
   4      |   9      2     |   0      0     |  1356   301    |     0      0   |  50     77
   5      |  30     11     | 376    263     |  1253   459    |  5363   3752   |  43     73
   5      |   9      9     | 320    302     |  1361  1361    | 16536  15593   |  36     74
   6      |  28     26     | 687    589     |  1131  1051    |  9479   8128   |  33     74
   6      |   5      0     |  62      0     |   859     0    |  3641      0   |  31     72
   7      |  26      6     | 588    436     |  1049   242    |  8105   6007   |  24     74
   7      |   9      3     |  57      0     |  1353   451    |  2918      0   |  41     73
   8      |  29      0     | 338    157     |  1212     0    |  4828   2240   |  43     72
   8      |  11      0     |  77      0     |  1466     0    |  3499      0   |  44     74
   9      |  30      4     | 384    231     |  1297   173    |  5671   3412   |  47     74
   9      |   9      9     | 154    117     |  1184  1184    |  6916   5262   |  44     74
  10      |  31     31     | 713    607     |  1351  1351    | 10611   9032   |  45     71
  10      |  11     11     | 474    436     |  1386  1386    | 20403  18766   |  42     69
  11      |  30     30     | 925    854     |  1327  1327    | 13967  12897   |  33     71
  11      |   6      5     |  71      0     |   738   615    |  2988      0   |  37     70
  12      |  25      8     | 650    534     |  1109   354    |  9844   8088   |  40     68
  12      |  11     11     | 266    246     |  1354  1354    | 11185  10343   |  48     71
  13      |  30     25     | 791    656     |  1298  1081    | 11684   9691   |  27     71
  13      |   5      5     | 234    204     |   670   670    | 10718   9343   |  12     70
  14      |  29     29     | 791    674     |  1227  1227    | 11430   9740   |  29     69
  14      |  11      1     |  50      0     |  1535   139    |  2385      0   |  46     70
  15      |  26     15     | 681    549     |  1111   641    |  9938   8012   |  36     72
  15      |   7      7     | 281    248     |   946   946    | 12981  11455   |  24     72
  16      |  31     31     | 946    890     |  1316  1316    | 13712  12902   |  29     77
  16      |  10     10     | 486    472     |  1323  1323    | 21957  21324   |  32     75
  17      |  20     20     |1061   1019     |   861   861    | 15602  14984   |  35     71
  17      |   8      8     | 521    491     |  1072  1072    | 23843  22468   |  28     73
  18      |  17     17     |1052   1006     |   731   731    | 15453  14773   |  27     75
  18      |   9      9     | 514    474     |  1224  1224    | 23872  22022   |  49     74
  19      |  27     27     |1254   1204     |  1159  1159    | 18383  17649   |  48     73
  19      |   9      9     | 376    374     |  1230  1230    | 17550  17457   |  37     75
  20      |  24     24     |1128   1045     |  1021  1021    | 16389  15182   |  20     72
  20      |  11     11     | 564    536     |  1534  1534    | 26862  25526   |  38     73
  21      |  28     28     |1437   1375     |  1196  1196    | 20965  20060   |  31     75
  21      |   5      5     | 412    395     |   658   658    | 18525  17759   |  52     74
  22      |  21     21     |1159   1118     |   912   912    | 17198  16595   |  29     79
  22      |   3      3     | 564    555     |   396   396    | 25443  25047   |  36     78
============================================================================================
\end{lstlisting}

\begin{lstlisting}[language=bash,basicstyle=\ttfamily\scriptsize]
Interrupcion por teclado detectada.
Aplicacion de video detenida.

=== Estadisticas globales de ancho de banda ===
Audio enviado:	1079.08 kbps
Audio recibido:   818.01 kbps
Video enviado:	10215.45 kbps
Video recibido:   8962.97 kbps
Tiempo total: 	22.6 s
=======================================================

=== Estadisticas de FPS ===
FPS objetivo: 	12.0
FPS real promedio: 9.4
Eficiencia FPS:	78.0%
==========================

=== Estadosticas de Resolucion ===
Resolucion objetivo: 350x250
Resolucion real: 352x288
Tiempo promedio de reescalado: 6.09 ms
Impacto en rendimiento:    	7.3%
=================================

=== Resoluciones compatibles de la camara ===
  1. 320x240
  2. 352x288 * SELECCIONADA
  3. 640x360
  4. 640x480
  5. 800x600
  6. 1024x768
  7. 1280x720
  8. 1920x1080

Dispositivo de camara: /dev/video0
==========================================
Programa terminado.
QObject::killTimer: Timers cannot be stopped from another thread
QObject::~QObject: Timers cannot be stopped from another thread
\end{lstlisting}
\vspace{\baselineskip}

\newpage

Ahora, se procederá a analizar los resultados obtenidos en las pruebas realizadas con un límite de latencia de 250 ms.
\vspace{\baselineskip}

\textbf{Análisis de \textit{Minimal\_Video} con 250ms de latencia:}
\vspace{\baselineskip}

Al analizar el comportamiento de \textit{Minimal\_Video} bajo esta latencia tan elevada, observamos un impacto considerable. Las estadísticas globales muestran que el módulo envía audio a 1044.97 kbps (recibiendo 824.80 kbps, 79\%) y vídeo a 9296.39 kbps (recibiendo 7781.52 kbps, 84\%). Estos porcentajes de recepción, aunque inferiores a los escenarios con menor latencia, siguen permitiendo una comunicación básica.
\vspace{\baselineskip}

El análisis de los ciclos muestra que inicialmente hay ciclos completos sin recepción de datos, seguidos por ciclos donde se recibe parcialmente y luego se estabiliza. Concretamente en los ciclos 2-7, observamos una recepción muy irregular, que afecta directamente la experiencia del usuario con pausas y cortes. Además, se aprecia que la imagen y el sonido van a tirones, con momentos de congelación.

\vspace{\baselineskip}

\textbf{Análisis de \textit{Minimal\_Video\_FPS} con 250ms de latencia:}
\vspace{\baselineskip}

Este módulo muestra una adaptación interesante a la latencia tan elevada. Las estadísticas globales indican una transmisión de audio de 1127.14 kbps (recibiendo 943.42 kbps, 84\%) y de vídeo de 10848.86 kbps (recibiendo 9626.26 kbps, 89\%). Estos porcentajes son notablemente mejores que para el módulo base, sugiriendo que el control de FPS ayuda a optimizar la transmisión incluso con alta latencia.
\vspace{\baselineskip}

Las ``Estadísticas de FPS'' revelan un dato sorprendentemente positivo. El módulo consigue mantener 7.2 FPS reales frente al objetivo de 12 FPS, alcanzando una eficiencia del 60.1\%. Esto significa que funciona mejor de lo esperado para una latencia tan alta. Ademas indica que el control de FPS consigue adaptarse satisfactoriamente reduciendo la frecuencia de envío de fotogramas para adaptarse a las limitaciones. Sin embargo, la visualización sigue siendo intermitente causando también congelaciones momentáneas en la visualización.

\vspace{\baselineskip}

\textbf{Análisis de \textit{Minimal\_Video\_Resolution} con 250ms de latencia:}
\vspace{\baselineskip}

Los resultados de este módulo bajo una latencia de 250ms son interesantes. Los datos globales muestran una transmisión de audio de 1079.08 kbps (recibiendo 818.01 kbps, 76\%) y de vídeo de 10215.45 kbps (recibiendo 8962.97 kbps, 88\%). Estos porcentajes de recepción son comparables a los del módulo anterior, indicando una buena gestión del flujo de datos a pesar de la resolución reescalada.
\vspace{\baselineskip}

Lo más sorprendente son las ``Estadísticas de FPS'', que revelan un promedio de 9.4 FPS reales frente al objetivo de 12 FPS, alcanzando una eficiencia del 78.0\%. Este resultado, el mejor de los tres módulos, sugiere que la combinación de control de FPS y resolución adaptada a 352x288, es especialmente efectiva para mitigar los efectos de la alta latencia. El ``Tiempo de reescalado promedio'' es de 6.09 ms, con un impacto en rendimiento del 7.3\%, valores ligeramente superiores a los observados en condiciones con menor latencia, pero aún dentro de un rango aceptable.
\vspace{\baselineskip}

\textbf{Conclusiones para latencia de 250ms:}

Una latencia de 250ms, muestra comportamientos interesantes y algunas sorpresas en el rendimiento de los tres módulos:

\begin{itemize}
    \item \textbf{Recepción parcial pero funcional:} Los tres módulos mantienen porcentajes de recepción relativamente buenos (76-89\%), permitiendo una comunicación básica aunque con ciertas interrupciones.
    
    \item \textbf{Eficiencia inesperada:} Contrario a lo que podría esperarse, el rendimiento en términos de FPS no se degrada catastróficamente. Especialmente en el caso de \textit{Minimal\_Video\_Resolution}, que alcanza una sorprendente eficiencia del 78\%.
    
    \item \textbf{Comportamiento:} El análisis por ciclos revela una visualización entrecortada y una desincronización entre audio y vídeo.
    
    \item \textbf{Mejor módulo:} En esta prueba, \textit{Minimal\_Video\_Resolution} demuestra ser la mejor opción, sugiriendo que la combinación de control de FPS y resolución reescalada es especialmente efectiva para mitigar los efectos de la alta latencia.
    
    \item \textbf{Adaptación progresiva:} Los tres módulos muestran una adaptación progresiva a la latencia, con una estabilización después de los primeros ciclos, lo que indica cierta capacidad de ajuste a las condiciones adversas.
\end{itemize}

Estos resultados demuestran que los mecanismos del control de FPS y la resolución reescalable, pueden mitigar sustancialmente sus efectos negativos. Concretamente es interesante observar cómo el módulo más complejo (\textit{Minimal\_Video\_Resolution}) consigue el mejor rendimiento, a diferencia ade que ocurría en escenarios con limitaciones de ancho de banda.
